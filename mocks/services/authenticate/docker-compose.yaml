volumes:
  sqlserver_data:
  
name: authenticate-sql 
services:
  dal-with-entra:
    container_name: dal-with-entra
    build:
      context: .
    volumes:
      - ../../../:/usr/local/dev/ffc-customer-registry-api
    working_dir: /usr/local/dev/ffc-customer-registry-api
    command: npm run start:dev
    ports:
      - 3000:3000
      - 5000:5000
    environment:
      - AUTHENTICATE_DB_HOST=sqlserver
    depends_on:
      sqlserver:
        condition: service_healthy
  sqlserver:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${Sa_Password:-Password123}
      - MSSQL_PID=Developer
    ports:
      - 1433:1433
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P ${Sa_Password:-Password123} -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlserver.configurator:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./init:/docker-entrypoint-initdb.d
    depends_on:
      sqlserver:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools18/bin/sqlcmd -C -S sqlserver -U sa -P ${Sa_Password:-Password123} -d master -i docker-entrypoint-initdb.d/init.sql;
      echo "All done!";
      '